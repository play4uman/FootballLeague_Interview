// <auto-generated />
using System;
using FootballLeague_Interview.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballLeague_Interview.Migrations
{
    [DbContext(typeof(FootballLeagueDbContext))]
    partial class FootballLeagueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.DomesticLeague", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AwayTeamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GoalsScoredAwayTeam")
                        .HasColumnType("int");

                    b.Property<int>("GoalsScoredHomeTeam")
                        .HasColumnType("int");

                    b.Property<string>("HomeTeamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.StandingRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("GoalsConceived")
                        .HasColumnType("int");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("Played")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("StandingsOfSeason")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandingsOfSeason");

                    b.HasIndex("TeamId");

                    b.ToTable("StandingRow");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Standings", b =>
                {
                    b.Property<string>("OfSeason")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OfSeason");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Team", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DomesticLeagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomesticLeagueName");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Result", b =>
                {
                    b.HasOne("FootballLeague_Interview.DAL.Entities.Team", "AwayTeam")
                        .WithMany("AwayResults")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FootballLeague_Interview.DAL.Entities.Team", "HomeTeam")
                        .WithMany("HomeResults")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.StandingRow", b =>
                {
                    b.HasOne("FootballLeague_Interview.DAL.Entities.Standings", null)
                        .WithMany("StandingRows")
                        .HasForeignKey("StandingsOfSeason");

                    b.HasOne("FootballLeague_Interview.DAL.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Team", b =>
                {
                    b.HasOne("FootballLeague_Interview.DAL.Entities.DomesticLeague", "DomesticLeague")
                        .WithMany("Teams")
                        .HasForeignKey("DomesticLeagueName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DomesticLeague");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.DomesticLeague", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Standings", b =>
                {
                    b.Navigation("StandingRows");
                });

            modelBuilder.Entity("FootballLeague_Interview.DAL.Entities.Team", b =>
                {
                    b.Navigation("AwayResults");

                    b.Navigation("HomeResults");
                });
#pragma warning restore 612, 618
        }
    }
}
